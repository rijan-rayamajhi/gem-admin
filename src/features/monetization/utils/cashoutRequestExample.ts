// Example of how to create a cashout request with the new fields
import { CashoutRequest, CashoutStatus } from '../domain/entities/CashoutRequest';

/**
 * Example function showing how to create a cashout request
 * This would typically be called from the user app when they request a cashout
 */
export function createCashoutRequestExample(): CashoutRequest {
  const now = new Date();
  
  return {
    id: '', // This will be set by Firebase when the document is created
    userId: 'user123', // The ID of the user requesting the cashout
    userName: 'John Doe', // User's display name
    phoneNumber: '+91 9876543210', // User's phone number
    whatsappNumber: '+91 9876543210', // User's WhatsApp number (can be same as phone)
    upiId: 'john.doe@paytm', // User's UPI ID for receiving payment
    amount: 1500.00, // Amount to be cashed out
    status: CashoutStatus.PENDING, // Always starts as pending
    requestedAt: now, // Timestamp when request was made
    // Optional fields that will be set by admin during processing:
    // processedAt: undefined,
    // processedBy: undefined,
    // rejectionReason: undefined,
    // notes: undefined,
  };
}

/**
 * Example of the data structure that would be stored in Firebase
 * Collection: cashout_requests
 * Document ID: auto-generated by Firebase
 * 
 * Note: When using serverTimestamp() in Firebase, the requestedAt field
 * will be stored as a Firestore Timestamp. When retrieved, it can be:
 * - A Firestore Timestamp object (with .toDate() method)
 * - A string in ISO format (if serialized)
 * - A Date object (if already converted)
 * 
 * The parseDate() helper method handles all these cases.
 */
export const exampleFirebaseDocument = {
  userId: 'user123',
  userName: 'John Doe',
  phoneNumber: '+91 9876543210',
  whatsappNumber: '+91 9876543210',
  upiId: 'john.doe@paytm',
  amount: 1500.00,
  status: 'pending',
  requestedAt: '2024-01-15T10:30:00.000Z', // ISO string format (or Firestore Timestamp)
};

/**
 * Example of how the admin would process a cashout request
 */
export function processCashoutRequestExample() {
  // Admin approves the request
  const approvedUpdate = {
    status: CashoutStatus.APPROVED,
    processedBy: 'admin_user_id',
    notes: 'Payment processed successfully',
  };

  // Admin rejects the request
  const rejectedUpdate = {
    status: CashoutStatus.REJECTED,
    processedBy: 'admin_user_id',
    rejectionReason: 'Insufficient balance or invalid UPI ID',
    notes: 'Please verify your UPI ID and try again',
  };

  return { approvedUpdate, rejectedUpdate };
}
